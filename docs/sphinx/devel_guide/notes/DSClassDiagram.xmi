<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>3.0.0</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="DSClassDiagram" href="/scratch/Franck/SicoTmp/siconos/trunk/Docs/User/DynamicalSystemsInSiconos/DSClassDiagram.xmi" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <docsettings viewid="10" documentation="" uniqueid="580" />
  <UML:Model>
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="2" name="int" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="3" name="char" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="4" name="bool" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="5" name="float" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="6" name="double" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="7" name="long" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="8" name="short" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="9" name="string" />
   <UML:Class stereotype="class" visibility="public" xmi.id="11" name="LinearDS" >
    <UML:Operation visibility="protected" xmi.id="17" type="" name="LinearDS" />
    <UML:Operation visibility="public" xmi.id="18" type="" name="LinearDS" >
     <UML:Parameter visibility="private" xmi.id="19" value="" type="DynamicalSystemXML *" name="dsXML" />
     <UML:Parameter visibility="private" xmi.id="20" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="21" type="" name="LinearDS" >
     <UML:Parameter visibility="private" xmi.id="22" value="" type="const DynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="23" type="" name="LinearDS" >
     <UML:Parameter visibility="private" xmi.id="24" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="25" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="26" value="" type="const SiconosVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="27" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="28" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="29" type="" name="LinearDS" >
     <UML:Parameter visibility="private" xmi.id="30" value="" type="const int &amp;" name="newNumber" />
     <UML:Parameter visibility="private" xmi.id="31" value="" type="const SiconosVector &amp;" name="newX0" />
     <UML:Parameter visibility="private" xmi.id="32" value="" type="const SiconosMatrix &amp;" name="newA" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="33" type="void" name="computeA" >
     <UML:Parameter visibility="private" xmi.id="34" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="35" type="void" name="computeB" >
     <UML:Parameter visibility="private" xmi.id="36" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="37" type="LinearDS *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="38" value="" type="DynamicalSystem *" name="ds" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="39" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="40" type="const SimpleMatrix" name="getA" />
    <UML:Operation visibility="public" xmi.id="41" type="SiconosMatrix *" name="getAPtr" />
    <UML:Operation visibility="public" xmi.id="42" type="const SimpleVector" name="getB" />
    <UML:Operation visibility="public" xmi.id="43" type="SimpleVector *" name="getBPtr" />
    <UML:Operation visibility="public" xmi.id="44" type="void" name="saveDSToXML" />
    <UML:Operation visibility="public" xmi.id="45" type="void" name="setA" >
     <UML:Parameter visibility="private" xmi.id="46" value="" type="const SiconosMatrix &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="47" type="void" name="setAPtr" >
     <UML:Parameter visibility="private" xmi.id="48" value="" type="SiconosMatrix *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="49" type="void" name="setB" >
     <UML:Parameter visibility="private" xmi.id="50" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="51" type="void" name="setBPtr" >
     <UML:Parameter visibility="private" xmi.id="52" value="" type="SimpleVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="53" type="void" name="setComputeAFunction" >
     <UML:Parameter visibility="private" xmi.id="54" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="55" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="56" type="void" name="setComputeBFunction" >
     <UML:Parameter visibility="private" xmi.id="57" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="58" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="59" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="60" value="" type="*" name="computeBPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="61" type="" name="~LinearDS" />
    <UML:Attribute visibility="private" xmi.id="12" value="" type="SiconosMatrix *" name="A" />
    <UML:Attribute visibility="private" xmi.id="13" value="" type="SimpleVector *" name="b" />
    <UML:Attribute visibility="private" xmi.id="14" value="" type="SiconosSharedLibrary" name="cShared" />
    <UML:Attribute visibility="private" xmi.id="15" value="" type="bool" name="isAAllocatedIn" />
    <UML:Attribute visibility="private" xmi.id="16" value="" type="bool" name="isBAllocatedIn" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="62" name="DynamicalSystem" >
    <UML:Operation visibility="protected" xmi.id="83" type="" name="DynamicalSystem" />
    <UML:Operation visibility="public" xmi.id="84" type="" name="DynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="85" value="" type="DynamicalSystemXML *" name="dsXML" />
     <UML:Parameter visibility="private" xmi.id="86" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="87" type="" name="DynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="88" value="" type="const DynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="89" type="" name="DynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="90" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="91" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="92" value="" type="const SiconosVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="93" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="94" type="void" name="addDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="95" value="" type="DSInputOutput *" name="dsio" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="96" type="void" name="addTmpWorkVector" >
     <UML:Parameter visibility="private" xmi.id="97" value="" type="SimpleVector *" name="newVal" />
     <UML:Parameter visibility="private" xmi.id="98" value="" type="const std :: string &amp;" name="id" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="99" type="void" name="allocateTmpWorkVector" >
     <UML:Parameter visibility="private" xmi.id="100" value="" type="const std :: string &amp;" name="id" />
     <UML:Parameter visibility="private" xmi.id="101" value="" type="const int &amp;" name="size" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="102" type="virtual void" name="computeJacobianX" >
     <UML:Parameter visibility="private" xmi.id="103" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="104" type="virtual void" name="computeT" />
    <UML:Operation visibility="public" xmi.id="105" type="virtual void" name="computeU" >
     <UML:Parameter visibility="private" xmi.id="106" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="107" type="virtual void" name="computeU" >
     <UML:Parameter visibility="private" xmi.id="108" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="109" value="" type="SiconosVector *" name="xx" />
     <UML:Parameter visibility="private" xmi.id="110" value="" type="SiconosVector *" name="xxDot" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="111" type="virtual void" name="computeVectorField" >
     <UML:Parameter visibility="private" xmi.id="112" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="113" type="virtual void" name="display" />
    <UML:Operation visibility="public" xmi.id="114" type="virtual double" name="dsConvergenceIndicator" />
    <UML:Operation visibility="protected" xmi.id="115" type="virtual void" name="fillBoundaryConditionsFromXml" />
    <UML:Operation visibility="protected" xmi.id="116" type="virtual void" name="fillDsioFromXml" />
    <UML:Operation visibility="public" xmi.id="117" type="void" name="freeTmpWorkVector" >
     <UML:Parameter visibility="private" xmi.id="118" value="" type="const std :: string &amp;" name="id" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="119" type="BoundaryCondition *" name="getBoundaryConditionPtr" />
    <UML:Operation visibility="public" xmi.id="120" type="DSInputOutput *" name="getDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="121" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="122" type="const DynamicalSystemXML *" name="getDynamicalSystemXMLPtr" />
    <UML:Operation visibility="public" xmi.id="123" type="const SimpleMatrix" name="getJacobianX" />
    <UML:Operation visibility="public" xmi.id="124" type="SiconosMatrix *" name="getJacobianXPtr" />
    <UML:Operation visibility="public" xmi.id="125" type="const unsigned int" name="getN" />
    <UML:Operation visibility="public" xmi.id="126" type="NonSmoothDynamicalSystem *" name="getNSDSPtr" />
    <UML:Operation visibility="public" xmi.id="127" type="const int" name="getNumber" />
    <UML:Operation visibility="public" xmi.id="128" type="virtual const SimpleVector" name="getParametersList" >
     <UML:Parameter visibility="private" xmi.id="129" value="" type="const unsigned int &amp;" name="index" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="130" type="virtual SimpleVector *" name="getParametersListPtr" >
     <UML:Parameter visibility="private" xmi.id="131" value="" type="const unsigned int &amp;" name="index" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="132" type="virtual std :: vector &lt; SimpleVector * >" name="getParametersListVector" />
    <UML:Operation visibility="public" xmi.id="133" type="const SimpleVector" name="getR" />
    <UML:Operation visibility="public" xmi.id="134" type="const SiconosMemory" name="getRMemory" />
    <UML:Operation visibility="public" xmi.id="135" type="SiconosMemory *" name="getRMemoryPtr" />
    <UML:Operation visibility="public" xmi.id="136" type="SiconosVector *" name="getRPtr" />
    <UML:Operation visibility="public" xmi.id="137" type="const int" name="getStepsInMemory" />
    <UML:Operation visibility="public" xmi.id="138" type="const SimpleMatrix" name="getT" />
    <UML:Operation visibility="public" xmi.id="139" type="SiconosMatrix *" name="getTPtr" />
    <UML:Operation visibility="public" xmi.id="140" type="SimpleVector *" name="getTmpWorkVector" >
     <UML:Parameter visibility="private" xmi.id="141" value="" type="const std :: string &amp;" name="id" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="142" type="const SimpleVector" name="getU" />
    <UML:Operation visibility="public" xmi.id="143" type="SiconosVector *" name="getUPtr" />
    <UML:Operation visibility="public" xmi.id="144" type="const unsigned int" name="getUSize" />
    <UML:Operation visibility="public" xmi.id="145" type="vfPtr" name="getVectorFieldPtr" />
    <UML:Operation visibility="public" xmi.id="146" type="const SimpleVector" name="getX" />
    <UML:Operation visibility="public" xmi.id="147" type="const SimpleVector" name="getX0" />
    <UML:Operation visibility="public" xmi.id="148" type="SiconosVector *" name="getX0Ptr" />
    <UML:Operation visibility="public" xmi.id="149" type="const SimpleVector" name="getXDot" />
    <UML:Operation visibility="public" xmi.id="150" type="const SiconosMemory" name="getXDotMemory" />
    <UML:Operation visibility="public" xmi.id="151" type="SiconosMemory *" name="getXDotMemoryPtr" />
    <UML:Operation visibility="public" xmi.id="152" type="SiconosVector *" name="getXDotPtr" />
    <UML:Operation visibility="public" xmi.id="153" type="const SimpleVector" name="getXFree" />
    <UML:Operation visibility="public" xmi.id="154" type="SiconosVector *" name="getXFreePtr" />
    <UML:Operation visibility="public" xmi.id="155" type="const SiconosMemory" name="getXMemory" />
    <UML:Operation visibility="public" xmi.id="156" type="SiconosMemory *" name="getXMemoryPtr" />
    <UML:Operation visibility="public" xmi.id="157" type="SiconosVector *" name="getXPtr" />
    <UML:Operation visibility="public" xmi.id="158" type="virtual void" name="initMemory" >
     <UML:Parameter visibility="private" xmi.id="159" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="160" type="virtual void" name="saveBCToXML" />
    <UML:Operation visibility="public" xmi.id="161" type="virtual void" name="saveDSDataToXML" />
    <UML:Operation visibility="public" xmi.id="162" type="virtual void" name="saveDSIOToXML" />
    <UML:Operation visibility="public" xmi.id="163" type="virtual void" name="saveDSToXML" />
    <UML:Operation visibility="public" xmi.id="164" type="void" name="setBoundaryConditionPtr" >
     <UML:Parameter visibility="private" xmi.id="165" value="" type="BoundaryCondition *" name="newBC" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="166" type="void" name="setComputeJacobianXFunction" >
     <UML:Parameter visibility="private" xmi.id="167" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="168" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="169" type="void" name="setComputeTFunction" >
     <UML:Parameter visibility="private" xmi.id="170" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="171" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="172" type="void" name="setComputeUFunction" >
     <UML:Parameter visibility="private" xmi.id="173" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="174" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="175" type="void" name="setDSInputOutputs" >
     <UML:Parameter visibility="private" xmi.id="176" value="" type="std :: vector &lt; DSInputOutput * > newDsioVect" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="177" type="void" name="setDynamicalSystemXMLPtr" >
     <UML:Parameter visibility="private" xmi.id="178" value="" type="DynamicalSystemXML *" name="newDsxml" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="179" type="void" name="setId" >
     <UML:Parameter visibility="private" xmi.id="180" value="" type="const std :: string &amp;" name="newId" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="181" type="void" name="setJacobianX" >
     <UML:Parameter visibility="private" xmi.id="182" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="183" type="void" name="setJacobianXPtr" >
     <UML:Parameter visibility="private" xmi.id="184" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="185" type="void" name="setN" >
     <UML:Parameter visibility="private" xmi.id="186" value="" type="const int &amp;" name="newN" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="187" type="void" name="setNSDSPtr" >
     <UML:Parameter visibility="private" xmi.id="188" value="" type="NonSmoothDynamicalSystem *" name="newNsds" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="189" type="void" name="setNumber" >
     <UML:Parameter visibility="private" xmi.id="190" value="" type="const int &amp;" name="newNumber" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="191" type="virtual void" name="setParametersList" >
     <UML:Parameter visibility="private" xmi.id="192" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="193" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="194" type="virtual void" name="setParametersListPtr" >
     <UML:Parameter visibility="private" xmi.id="195" value="" type="SimpleVector *" name="newPtr" />
     <UML:Parameter visibility="private" xmi.id="196" value="" type="const unsigned int &amp;" name="index" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="197" type="virtual void" name="setParametersListVector" >
     <UML:Parameter visibility="private" xmi.id="198" value="" type="const std :: vector &lt; SimpleVector * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="199" type="void" name="setR" >
     <UML:Parameter visibility="private" xmi.id="200" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="201" type="void" name="setRMemory" >
     <UML:Parameter visibility="private" xmi.id="202" value="" type="const SiconosMemory &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="203" type="void" name="setRMemoryPtr" >
     <UML:Parameter visibility="private" xmi.id="204" value="" type="SiconosMemory *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="205" type="void" name="setRPtr" >
     <UML:Parameter visibility="private" xmi.id="206" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="207" type="void" name="setStepsInMemory" >
     <UML:Parameter visibility="private" xmi.id="208" value="" type="const int &amp;" name="steps" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="209" type="void" name="setT" >
     <UML:Parameter visibility="private" xmi.id="210" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="211" type="void" name="setTPtr" >
     <UML:Parameter visibility="private" xmi.id="212" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="213" type="void" name="setTmpWorkVector" >
     <UML:Parameter visibility="private" xmi.id="214" value="" type="std :: map &lt; const std :: string" />
     <UML:Parameter visibility="private" xmi.id="215" value="" type="SimpleVector * > newVect" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="216" type="void" name="setType" >
     <UML:Parameter visibility="private" xmi.id="217" value="" type="const std :: string" name="newType" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="218" type="void" name="setU" >
     <UML:Parameter visibility="private" xmi.id="219" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="220" type="void" name="setUPtr" >
     <UML:Parameter visibility="private" xmi.id="221" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="222" type="void" name="setUSize" >
     <UML:Parameter visibility="private" xmi.id="223" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="224" type="void" name="setVectorFieldFunction" >
     <UML:Parameter visibility="private" xmi.id="225" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="226" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="227" type="void" name="setX" >
     <UML:Parameter visibility="private" xmi.id="228" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="229" type="void" name="setX0" >
     <UML:Parameter visibility="private" xmi.id="230" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="231" type="void" name="setX0Ptr" >
     <UML:Parameter visibility="private" xmi.id="232" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="233" type="void" name="setXDot" >
     <UML:Parameter visibility="private" xmi.id="234" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="235" type="void" name="setXDotMemory" >
     <UML:Parameter visibility="private" xmi.id="236" value="" type="const SiconosMemory &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="237" type="void" name="setXDotMemoryPtr" >
     <UML:Parameter visibility="private" xmi.id="238" value="" type="SiconosMemory *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="239" type="void" name="setXDotPtr" >
     <UML:Parameter visibility="private" xmi.id="240" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="241" type="void" name="setXFree" >
     <UML:Parameter visibility="private" xmi.id="242" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="243" type="void" name="setXFreePtr" >
     <UML:Parameter visibility="private" xmi.id="244" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="245" type="void" name="setXMemory" >
     <UML:Parameter visibility="private" xmi.id="246" value="" type="const SiconosMemory &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="247" type="void" name="setXMemoryPtr" >
     <UML:Parameter visibility="private" xmi.id="248" value="" type="SiconosMemory *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="249" type="void" name="setXPtr" >
     <UML:Parameter visibility="private" xmi.id="250" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="251" type="virtual void" name="swapInMemory" />
    <UML:Operation visibility="protected" xmi.id="252" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="253" value="" type="*" name="computeTPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="254" type="virtual " name="~DynamicalSystem" />
    <UML:Attribute visibility="protected" xmi.id="63" value="" type="BoundaryCondition *" name="BC" />
    <UML:Attribute visibility="protected" xmi.id="64" value="" type="SiconosMatrix *" name="T" />
    <UML:Attribute visibility="protected" xmi.id="65" value="" type="SiconosSharedLibrary" name="cShared" />
    <UML:Attribute visibility="protected" xmi.id="66" value="" type="DynamicalSystemXML *" name="dsxml" />
    <UML:Attribute visibility="protected" xmi.id="67" value="" type="bool" name="isBCAllocatedIn" />
    <UML:Attribute visibility="protected" xmi.id="68" value="" type="SiconosMatrix *" name="jacobianX" />
    <UML:Attribute visibility="protected" xmi.id="69" value="" type="unsigned int" name="n" />
    <UML:Attribute visibility="protected" xmi.id="70" value="" type="NonSmoothDynamicalSystem *" name="nsds" />
    <UML:Attribute visibility="protected" xmi.id="71" value="" type="int" name="number" />
    <UML:Attribute visibility="protected" xmi.id="72" value="" type="SiconosVector *" name="r" />
    <UML:Attribute visibility="protected" xmi.id="73" value="" type="SiconosMemory *" name="rMemory" />
    <UML:Attribute visibility="protected" xmi.id="74" value="" type="unsigned int" name="stepsInMemory" />
    <UML:Attribute visibility="protected" xmi.id="75" value="" type="SiconosVector *" name="u" />
    <UML:Attribute visibility="protected" xmi.id="76" value="" type="unsigned int" name="uSize" />
    <UML:Attribute visibility="protected" xmi.id="77" value="" type="SiconosVector *" name="x" />
    <UML:Attribute visibility="protected" xmi.id="78" value="" type="SiconosVector *" name="x0" />
    <UML:Attribute visibility="protected" xmi.id="79" value="" type="SiconosVector *" name="xDot" />
    <UML:Attribute visibility="protected" xmi.id="80" value="" type="SiconosMemory *" name="xDotMemory" />
    <UML:Attribute visibility="protected" xmi.id="81" value="" type="SiconosVector *" name="xFree" />
    <UML:Attribute visibility="protected" xmi.id="82" value="" type="SiconosMemory *" name="xMemory" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="255" name="LagrangianDS" >
    <UML:Operation visibility="protected" xmi.id="277" type="" name="LagrangianDS" />
    <UML:Operation visibility="public" xmi.id="278" type="" name="LagrangianDS" >
     <UML:Parameter visibility="private" xmi.id="279" value="" type="DynamicalSystemXML *" name="dsXML" />
     <UML:Parameter visibility="private" xmi.id="280" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="281" type="" name="LagrangianDS" >
     <UML:Parameter visibility="private" xmi.id="282" value="" type="const DynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="283" type="" name="LagrangianDS" >
     <UML:Parameter visibility="private" xmi.id="284" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="285" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="286" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="287" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="288" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="289" type="" name="LagrangianDS" >
     <UML:Parameter visibility="private" xmi.id="290" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="291" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="292" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="293" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="294" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="295" type="void" name="computeFExt" >
     <UML:Parameter visibility="private" xmi.id="296" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="297" type="void" name="computeFInt" >
     <UML:Parameter visibility="private" xmi.id="298" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="299" type="void" name="computeFInt" >
     <UML:Parameter visibility="private" xmi.id="300" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="301" value="" type="SimpleVector *" />
     <UML:Parameter visibility="private" xmi.id="302" value="" type="SimpleVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="303" type="void" name="computeJacobianQFInt" >
     <UML:Parameter visibility="private" xmi.id="304" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="305" type="void" name="computeJacobianQFInt" >
     <UML:Parameter visibility="private" xmi.id="306" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="307" value="" type="SimpleVector *" name="q" />
     <UML:Parameter visibility="private" xmi.id="308" value="" type="SimpleVector *" name="velocity" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="309" type="void" name="computeJacobianQNNL" />
    <UML:Operation visibility="public" xmi.id="310" type="void" name="computeJacobianQNNL" >
     <UML:Parameter visibility="private" xmi.id="311" value="" type="SimpleVector *" name="q" />
     <UML:Parameter visibility="private" xmi.id="312" value="" type="SimpleVector *" name="velocity" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="313" type="void" name="computeJacobianVelocityFInt" >
     <UML:Parameter visibility="private" xmi.id="314" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="315" type="void" name="computeJacobianVelocityFInt" >
     <UML:Parameter visibility="private" xmi.id="316" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="317" value="" type="SimpleVector *" name="q" />
     <UML:Parameter visibility="private" xmi.id="318" value="" type="SimpleVector *" name="velocity" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="319" type="void" name="computeJacobianVelocityNNL" />
    <UML:Operation visibility="public" xmi.id="320" type="void" name="computeJacobianVelocityNNL" >
     <UML:Parameter visibility="private" xmi.id="321" value="" type="SimpleVector *" name="q" />
     <UML:Parameter visibility="private" xmi.id="322" value="" type="SimpleVector *" name="velocity" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="323" type="void" name="computeMass" >
     <UML:Parameter visibility="private" xmi.id="324" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="325" type="void" name="computeMass" >
     <UML:Parameter visibility="private" xmi.id="326" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="327" value="" type="SimpleVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="328" type="void" name="computeNNL" />
    <UML:Operation visibility="public" xmi.id="329" type="void" name="computeNNL" >
     <UML:Parameter visibility="private" xmi.id="330" value="" type="SimpleVector *" name="q" />
     <UML:Parameter visibility="private" xmi.id="331" value="" type="SimpleVector *" name="velocity" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="332" type="LagrangianDS *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="333" value="" type="DynamicalSystem *" name="ds" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="334" type="virtual void" name="display" />
    <UML:Operation visibility="public" xmi.id="335" type="virtual double" name="dsConvergenceIndicator" />
    <UML:Operation visibility="public" xmi.id="336" type="const SimpleVector" name="getFExt" />
    <UML:Operation visibility="public" xmi.id="337" type="SimpleVector *" name="getFExtPtr" />
    <UML:Operation visibility="public" xmi.id="338" type="const SimpleVector" name="getFInt" />
    <UML:Operation visibility="public" xmi.id="339" type="SimpleVector *" name="getFIntPtr" />
    <UML:Operation visibility="public" xmi.id="340" type="bool" name="getIsLDSPlugin" >
     <UML:Parameter visibility="private" xmi.id="341" value="" type="const unsigned int &amp;" name="n" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="342" type="const SimpleMatrix" name="getJacobianQFInt" />
    <UML:Operation visibility="public" xmi.id="343" type="SiconosMatrix *" name="getJacobianQFIntPtr" />
    <UML:Operation visibility="public" xmi.id="344" type="const SimpleMatrix" name="getJacobianQNNL" />
    <UML:Operation visibility="public" xmi.id="345" type="SiconosMatrix *" name="getJacobianQNNLPtr" />
    <UML:Operation visibility="public" xmi.id="346" type="const SimpleMatrix" name="getJacobianVelocityFInt" />
    <UML:Operation visibility="public" xmi.id="347" type="SiconosMatrix *" name="getJacobianVelocityFIntPtr" />
    <UML:Operation visibility="public" xmi.id="348" type="const SimpleMatrix" name="getJacobianVelocityNNL" />
    <UML:Operation visibility="public" xmi.id="349" type="SiconosMatrix *" name="getJacobianVelocityNNLPtr" />
    <UML:Operation visibility="public" xmi.id="350" type="const SimpleMatrix" name="getMass" />
    <UML:Operation visibility="public" xmi.id="351" type="SiconosMatrix *" name="getMassPtr" />
    <UML:Operation visibility="public" xmi.id="352" type="const SimpleVector" name="getNNL" />
    <UML:Operation visibility="public" xmi.id="353" type="SimpleVector *" name="getNNLPtr" />
    <UML:Operation visibility="public" xmi.id="354" type="const unsigned int" name="getNdof" />
    <UML:Operation visibility="public" xmi.id="355" type="const SimpleVector" name="getP" />
    <UML:Operation visibility="public" xmi.id="356" type="SimpleVector *" name="getPPtr" />
    <UML:Operation visibility="public" xmi.id="357" type="const SimpleVector" name="getParametersList" >
     <UML:Parameter visibility="private" xmi.id="358" value="" type="const unsigned int &amp;" name="index" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="359" type="SimpleVector *" name="getParametersListPtr" >
     <UML:Parameter visibility="private" xmi.id="360" value="" type="const unsigned int &amp;" name="index" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="361" type="const SimpleVector" name="getQ" />
    <UML:Operation visibility="public" xmi.id="362" type="const SimpleVector" name="getQ0" />
    <UML:Operation visibility="public" xmi.id="363" type="SimpleVector *" name="getQ0Ptr" />
    <UML:Operation visibility="public" xmi.id="364" type="const SimpleVector" name="getQFree" />
    <UML:Operation visibility="public" xmi.id="365" type="SimpleVector *" name="getQFreePtr" />
    <UML:Operation visibility="public" xmi.id="366" type="const SiconosMemory" name="getQMemory" />
    <UML:Operation visibility="public" xmi.id="367" type="SiconosMemory *" name="getQMemoryPtr" />
    <UML:Operation visibility="public" xmi.id="368" type="SimpleVector *" name="getQPtr" />
    <UML:Operation visibility="public" xmi.id="369" type="const SimpleVector" name="getVelocity" />
    <UML:Operation visibility="public" xmi.id="370" type="const SimpleVector" name="getVelocity0" />
    <UML:Operation visibility="public" xmi.id="371" type="SimpleVector *" name="getVelocity0Ptr" />
    <UML:Operation visibility="public" xmi.id="372" type="const SimpleVector" name="getVelocityFree" />
    <UML:Operation visibility="public" xmi.id="373" type="SimpleVector *" name="getVelocityFreePtr" />
    <UML:Operation visibility="public" xmi.id="374" type="const SiconosMemory" name="getVelocityMemory" />
    <UML:Operation visibility="public" xmi.id="375" type="SiconosMemory *" name="getVelocityMemoryPtr" />
    <UML:Operation visibility="public" xmi.id="376" type="SimpleVector *" name="getVelocityPtr" />
    <UML:Operation visibility="public" xmi.id="377" type="void" name="initMemory" >
     <UML:Parameter visibility="private" xmi.id="378" value="" type="const unsigned int &amp;" name="steps" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="379" type="virtual void" name="saveDSToXML" />
    <UML:Operation visibility="public" xmi.id="380" type="void" name="setComputeFExtFunction" >
     <UML:Parameter visibility="private" xmi.id="381" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="382" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="383" type="void" name="setComputeFIntFunction" >
     <UML:Parameter visibility="private" xmi.id="384" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="385" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="386" type="void" name="setComputeJacobianQFIntFunction" >
     <UML:Parameter visibility="private" xmi.id="387" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="388" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="389" type="void" name="setComputeJacobianQNNLFunction" >
     <UML:Parameter visibility="private" xmi.id="390" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="391" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="392" type="void" name="setComputeJacobianVelocityFIntFunction" >
     <UML:Parameter visibility="private" xmi.id="393" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="394" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="395" type="void" name="setComputeJacobianVelocityNNLFunction" >
     <UML:Parameter visibility="private" xmi.id="396" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="397" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="398" type="void" name="setComputeMassFunction" >
     <UML:Parameter visibility="private" xmi.id="399" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="400" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="401" type="void" name="setComputeNNLFunction" >
     <UML:Parameter visibility="private" xmi.id="402" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="403" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="404" type="void" name="setFExt" >
     <UML:Parameter visibility="private" xmi.id="405" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="406" type="void" name="setFExtPtr" >
     <UML:Parameter visibility="private" xmi.id="407" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="408" type="void" name="setFInt" >
     <UML:Parameter visibility="private" xmi.id="409" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="410" type="void" name="setFIntPtr" >
     <UML:Parameter visibility="private" xmi.id="411" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="412" type="void" name="setJacobianQFInt" >
     <UML:Parameter visibility="private" xmi.id="413" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="414" type="void" name="setJacobianQFIntPtr" >
     <UML:Parameter visibility="private" xmi.id="415" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="416" type="void" name="setJacobianQNNL" >
     <UML:Parameter visibility="private" xmi.id="417" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="418" type="void" name="setJacobianQNNLPtr" >
     <UML:Parameter visibility="private" xmi.id="419" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="420" type="void" name="setJacobianVelocityFInt" >
     <UML:Parameter visibility="private" xmi.id="421" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="422" type="void" name="setJacobianVelocityFIntPtr" >
     <UML:Parameter visibility="private" xmi.id="423" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="424" type="void" name="setJacobianVelocityNNL" >
     <UML:Parameter visibility="private" xmi.id="425" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="426" type="void" name="setJacobianVelocityNNLPtr" >
     <UML:Parameter visibility="private" xmi.id="427" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="428" type="void" name="setMass" >
     <UML:Parameter visibility="private" xmi.id="429" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="430" type="void" name="setMassPtr" >
     <UML:Parameter visibility="private" xmi.id="431" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="432" type="void" name="setNNL" >
     <UML:Parameter visibility="private" xmi.id="433" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="434" type="void" name="setNNLPtr" >
     <UML:Parameter visibility="private" xmi.id="435" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="436" type="void" name="setNdof" >
     <UML:Parameter visibility="private" xmi.id="437" value="" type="const unsigned int &amp;" name="newNdof" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="438" type="void" name="setP" >
     <UML:Parameter visibility="private" xmi.id="439" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="440" type="void" name="setPPtr" >
     <UML:Parameter visibility="private" xmi.id="441" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="442" type="void" name="setParametersList" >
     <UML:Parameter visibility="private" xmi.id="443" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="444" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="445" type="void" name="setParametersListPtr" >
     <UML:Parameter visibility="private" xmi.id="446" value="" type="SimpleVector *" name="newPtr" />
     <UML:Parameter visibility="private" xmi.id="447" value="" type="const unsigned int &amp;" name="index" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="448" type="void" name="setParametersListVector" >
     <UML:Parameter visibility="private" xmi.id="449" value="" type="const std :: vector &lt; SimpleVector * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="450" type="void" name="setQ" >
     <UML:Parameter visibility="private" xmi.id="451" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="452" type="void" name="setQ0" >
     <UML:Parameter visibility="private" xmi.id="453" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="454" type="void" name="setQ0Ptr" >
     <UML:Parameter visibility="private" xmi.id="455" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="456" type="void" name="setQFree" >
     <UML:Parameter visibility="private" xmi.id="457" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="458" type="void" name="setQFreePtr" >
     <UML:Parameter visibility="private" xmi.id="459" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="460" type="void" name="setQMemory" >
     <UML:Parameter visibility="private" xmi.id="461" value="" type="const SiconosMemory &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="462" type="void" name="setQMemoryPtr" >
     <UML:Parameter visibility="private" xmi.id="463" value="" type="SiconosMemory *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="464" type="void" name="setQPtr" >
     <UML:Parameter visibility="private" xmi.id="465" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="466" type="void" name="setVelocity" >
     <UML:Parameter visibility="private" xmi.id="467" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="468" type="void" name="setVelocity0" >
     <UML:Parameter visibility="private" xmi.id="469" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="470" type="void" name="setVelocity0Ptr" >
     <UML:Parameter visibility="private" xmi.id="471" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="472" type="void" name="setVelocityFree" >
     <UML:Parameter visibility="private" xmi.id="473" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="474" type="void" name="setVelocityFreePtr" >
     <UML:Parameter visibility="private" xmi.id="475" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="476" type="void" name="setVelocityMemory" >
     <UML:Parameter visibility="private" xmi.id="477" value="" type="const SiconosMemory &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="478" type="void" name="setVelocityMemoryPtr" >
     <UML:Parameter visibility="private" xmi.id="479" value="" type="SiconosMemory *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="480" type="void" name="setVelocityPtr" >
     <UML:Parameter visibility="private" xmi.id="481" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="482" type="void" name="swapInMemory" />
    <UML:Operation visibility="protected" xmi.id="483" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="484" value="" type="*" name="computeJacobianVelocityNNLPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="485" type="virtual " name="~LagrangianDS" />
    <UML:Attribute visibility="protected" xmi.id="256" value="" type="SimpleVector *" name="NNL" />
    <UML:Attribute visibility="protected" xmi.id="257" value="" type="SiconosSharedLibrary" name="cShared" />
    <UML:Attribute visibility="protected" xmi.id="258" value="" type="SimpleVector *" name="fExt" />
    <UML:Attribute visibility="protected" xmi.id="259" value="" type="SimpleVector *" name="fInt" />
    <UML:Attribute visibility="protected" xmi.id="260" value="" type="bool" name="isMassAllocatedIn" />
    <UML:Attribute visibility="protected" xmi.id="261" value="" type="bool" name="isPAllocatedIn" />
    <UML:Attribute visibility="protected" xmi.id="262" value="" type="SiconosMatrix *" name="jacobianQFInt" />
    <UML:Attribute visibility="protected" xmi.id="263" value="" type="SiconosMatrix *" name="jacobianQNNL" />
    <UML:Attribute visibility="protected" xmi.id="264" value="" type="SiconosMatrix *" name="jacobianVelocityFInt" />
    <UML:Attribute visibility="protected" xmi.id="265" value="" type="SiconosMatrix *" name="jacobianVelocityNNL" />
    <UML:Attribute visibility="protected" xmi.id="266" value="" type="SiconosMatrix *" name="mass" />
    <UML:Attribute visibility="protected" xmi.id="267" value="" type="unsigned int" name="ndof" />
    <UML:Attribute visibility="protected" xmi.id="268" value="" type="SimpleVector *" name="p" />
    <UML:Attribute visibility="protected" xmi.id="269" value="" type="SimpleVector *" name="q" />
    <UML:Attribute visibility="protected" xmi.id="270" value="" type="SimpleVector *" name="q0" />
    <UML:Attribute visibility="protected" xmi.id="271" value="" type="SimpleVector *" name="qFree" />
    <UML:Attribute visibility="protected" xmi.id="272" value="" type="SiconosMemory *" name="qMemory" />
    <UML:Attribute visibility="protected" xmi.id="273" value="" type="SimpleVector *" name="velocity" />
    <UML:Attribute visibility="protected" xmi.id="274" value="" type="SimpleVector *" name="velocity0" />
    <UML:Attribute visibility="protected" xmi.id="275" value="" type="SimpleVector *" name="velocityFree" />
    <UML:Attribute visibility="protected" xmi.id="276" value="" type="SiconosMemory *" name="velocityMemory" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="486" name="LagrangianLinearTIDS" >
    <UML:Operation visibility="protected" xmi.id="491" type="" name="LagrangianLinearTIDS" />
    <UML:Operation visibility="public" xmi.id="492" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="493" value="" type="DynamicalSystemXML *" name="dsXML" />
     <UML:Parameter visibility="private" xmi.id="494" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="495" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="496" value="" type="const DynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="497" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="498" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="499" value="" type="const unsigned int &amp;" name="ndof" />
     <UML:Parameter visibility="private" xmi.id="500" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="501" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="502" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="503" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="504" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="505" value="" type="const unsigned int &amp;" name="ndof" />
     <UML:Parameter visibility="private" xmi.id="506" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="507" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="508" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="509" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="510" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="511" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="512" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="513" value="" type="const unsigned int &amp;" name="ndof" />
     <UML:Parameter visibility="private" xmi.id="514" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="515" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="516" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="517" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="518" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="519" value="" type="const unsigned int &amp;" name="ndof" />
     <UML:Parameter visibility="private" xmi.id="520" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="521" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="522" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="523" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="524" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="525" type="LagrangianLinearTIDS *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="526" value="" type="DynamicalSystem *" name="ds" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="527" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="528" type="double" name="dsConvergenceIndicator" />
    <UML:Operation visibility="public" xmi.id="529" type="const SimpleMatrix" name="getC" />
    <UML:Operation visibility="public" xmi.id="530" type="SiconosMatrix *" name="getCPtr" />
    <UML:Operation visibility="public" xmi.id="531" type="const SimpleMatrix" name="getK" />
    <UML:Operation visibility="public" xmi.id="532" type="SiconosMatrix *" name="getKPtr" />
    <UML:Operation visibility="public" xmi.id="533" type="void" name="saveDSToXML" />
    <UML:Operation visibility="public" xmi.id="534" type="void" name="setC" >
     <UML:Parameter visibility="private" xmi.id="535" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="536" type="void" name="setCPtr" >
     <UML:Parameter visibility="private" xmi.id="537" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="538" type="void" name="setK" >
     <UML:Parameter visibility="private" xmi.id="539" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="540" type="void" name="setKPtr" >
     <UML:Parameter visibility="private" xmi.id="541" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="542" type="" name="~LagrangianLinearTIDS" />
    <UML:Attribute visibility="private" xmi.id="487" value="" type="SiconosMatrix *" name="C" />
    <UML:Attribute visibility="private" xmi.id="488" value="" type="SiconosMatrix *" name="K" />
    <UML:Attribute visibility="private" xmi.id="489" value="" type="bool" name="isCAllocatedIn" />
    <UML:Attribute visibility="private" xmi.id="490" value="" type="bool" name="isKAllocatedIn" />
   </UML:Class>
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="546" name=")" />
   <UML:Class stereotype="class" visibility="public" xmi.id="548" name="LinearTIDS" >
    <UML:Operation visibility="protected" xmi.id="549" type="" name="LinearTIDS" />
    <UML:Operation visibility="public" xmi.id="550" type="" name="LinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="551" value="" type="DynamicalSystemXML *" name="dsXML" />
     <UML:Parameter visibility="private" xmi.id="552" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="553" type="" name="LinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="554" value="" type="const DynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="555" type="" name="LinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="556" value="" type="const LinearTIDS &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="557" type="" name="LinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="558" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="559" value="" type="const SiconosVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="560" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="561" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="562" type="void" name="computeVectorField" >
     <UML:Parameter visibility="private" xmi.id="563" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="564" type="LinearTIDS *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="565" value="" type="DynamicalSystem *" name="ds" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="566" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="567" type="void" name="initialize" >
     <UML:Parameter visibility="private" xmi.id="568" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="569" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="570" type="void" name="setComputeAFunction" >
     <UML:Parameter visibility="private" xmi.id="571" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="572" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="573" type="void" name="setComputeBFunction" >
     <UML:Parameter visibility="private" xmi.id="574" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="575" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="576" type="void" name="setComputeJacobianXFunction" >
     <UML:Parameter visibility="private" xmi.id="577" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="578" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="579" type="" name="~LinearTIDS" />
   </UML:Class>
   <UML:Generalization child="11" visibility="public" xmi.id="543" parent="62" />
   <UML:Generalization child="255" visibility="public" xmi.id="544" parent="62" />
   <UML:Generalization child="486" visibility="public" xmi.id="545" parent="255" />
   <UML:Generalization child="548" visibility="public" xmi.id="580" parent="11" />
  </UML:Model>
  <diagrams>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="1011" snapy="10" showatts="0" xmi.id="1" documentation="" type="402" showops="0" showpackage="0" name="class diagram" localid="30000" showstereotype="0" showscope="0" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#2f0dd5" canvasheight="836" >
    <widgets/>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="1011" snapy="10" showatts="0" xmi.id="10" documentation="" type="402" showops="0" showpackage="0" name="DynamicalSystems" localid="30000" showstereotype="0" showscope="0" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#2f0dd5" canvasheight="836" >
    <widgets>
     <UML:ClassWidget usesdiagramfillcolour="1" width="119" showattsigs="603" usesdiagramusefillcolour="1" x="216" linecolour="none" y="42" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="62" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="96" showattsigs="603" usesdiagramusefillcolour="1" x="247" linecolour="none" y="93" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="255" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="147" showattsigs="603" usesdiagramusefillcolour="1" x="222" linecolour="none" y="176" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="486" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="65" showattsigs="603" usesdiagramusefillcolour="1" x="101" linecolour="none" y="123" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="11" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="77" showattsigs="603" usesdiagramusefillcolour="1" x="95" linecolour="none" y="176" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="548" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="62" widgetaid="255" xmi.id="544" >
      <linepath>
       <startpoint startx="295" starty="93" />
       <endpoint endx="295" endy="69" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="255" widgetaid="486" xmi.id="545" >
      <linepath>
       <startpoint startx="295" starty="176" />
       <endpoint endx="295" endy="120" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="62" widgetaid="11" xmi.id="543" >
      <linepath>
       <startpoint startx="133" starty="123" />
       <endpoint endx="255" endy="69" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="11" widgetaid="548" roleBdoc="" roleAdoc="" type="500" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="133" starty="176" />
       <endpoint endx="133" endy="150" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Views" >
    <listitem open="1" type="801" id="-1" label="Logical View" >
     <listitem open="0" type="807" id="10" label="DynamicalSystems" />
     <listitem open="0" type="807" id="1" label="class diagram" />
     <listitem open="0" type="813" id="62" label="DynamicalSystem" >
      <listitem open="0" type="814" id="63" label="BC" />
      <listitem open="0" type="814" id="64" label="T" />
      <listitem open="0" type="814" id="65" label="cShared" />
      <listitem open="0" type="814" id="66" label="dsxml" />
      <listitem open="0" type="814" id="67" label="isBCAllocatedIn" />
      <listitem open="0" type="814" id="68" label="jacobianX" />
      <listitem open="0" type="814" id="69" label="n" />
      <listitem open="0" type="814" id="70" label="nsds" />
      <listitem open="0" type="814" id="71" label="number" />
      <listitem open="0" type="814" id="72" label="r" />
      <listitem open="0" type="814" id="73" label="rMemory" />
      <listitem open="0" type="814" id="74" label="stepsInMemory" />
      <listitem open="0" type="814" id="75" label="u" />
      <listitem open="0" type="814" id="76" label="uSize" />
      <listitem open="0" type="814" id="77" label="x" />
      <listitem open="0" type="814" id="78" label="x0" />
      <listitem open="0" type="814" id="79" label="xDot" />
      <listitem open="0" type="814" id="80" label="xDotMemory" />
      <listitem open="0" type="814" id="81" label="xFree" />
      <listitem open="0" type="814" id="82" label="xMemory" />
      <listitem open="0" type="815" id="87" label="DynamicalSystem" />
      <listitem open="0" type="815" id="83" label="DynamicalSystem" />
      <listitem open="0" type="815" id="89" label="DynamicalSystem" />
      <listitem open="0" type="815" id="84" label="DynamicalSystem" />
      <listitem open="0" type="815" id="94" label="addDSInputOutput" />
      <listitem open="0" type="815" id="96" label="addTmpWorkVector" />
      <listitem open="0" type="815" id="99" label="allocateTmpWorkVector" />
      <listitem open="0" type="815" id="102" label="computeJacobianX" />
      <listitem open="0" type="815" id="104" label="computeT" />
      <listitem open="0" type="815" id="105" label="computeU" />
      <listitem open="0" type="815" id="107" label="computeU" />
      <listitem open="0" type="815" id="111" label="computeVectorField" />
      <listitem open="0" type="815" id="113" label="display" />
      <listitem open="0" type="815" id="114" label="dsConvergenceIndicator" />
      <listitem open="0" type="815" id="115" label="fillBoundaryConditionsFromXml" />
      <listitem open="0" type="815" id="116" label="fillDsioFromXml" />
      <listitem open="0" type="815" id="117" label="freeTmpWorkVector" />
      <listitem open="0" type="815" id="119" label="getBoundaryConditionPtr" />
      <listitem open="0" type="815" id="120" label="getDSInputOutput" />
      <listitem open="0" type="815" id="122" label="getDynamicalSystemXMLPtr" />
      <listitem open="0" type="815" id="123" label="getJacobianX" />
      <listitem open="0" type="815" id="124" label="getJacobianXPtr" />
      <listitem open="0" type="815" id="125" label="getN" />
      <listitem open="0" type="815" id="126" label="getNSDSPtr" />
      <listitem open="0" type="815" id="127" label="getNumber" />
      <listitem open="0" type="815" id="128" label="getParametersList" />
      <listitem open="0" type="815" id="130" label="getParametersListPtr" />
      <listitem open="0" type="815" id="132" label="getParametersListVector" />
      <listitem open="0" type="815" id="133" label="getR" />
      <listitem open="0" type="815" id="134" label="getRMemory" />
      <listitem open="0" type="815" id="135" label="getRMemoryPtr" />
      <listitem open="0" type="815" id="136" label="getRPtr" />
      <listitem open="0" type="815" id="137" label="getStepsInMemory" />
      <listitem open="0" type="815" id="138" label="getT" />
      <listitem open="0" type="815" id="139" label="getTPtr" />
      <listitem open="0" type="815" id="140" label="getTmpWorkVector" />
      <listitem open="0" type="815" id="142" label="getU" />
      <listitem open="0" type="815" id="143" label="getUPtr" />
      <listitem open="0" type="815" id="144" label="getUSize" />
      <listitem open="0" type="815" id="145" label="getVectorFieldPtr" />
      <listitem open="0" type="815" id="146" label="getX" />
      <listitem open="0" type="815" id="147" label="getX0" />
      <listitem open="0" type="815" id="148" label="getX0Ptr" />
      <listitem open="0" type="815" id="149" label="getXDot" />
      <listitem open="0" type="815" id="150" label="getXDotMemory" />
      <listitem open="0" type="815" id="151" label="getXDotMemoryPtr" />
      <listitem open="0" type="815" id="152" label="getXDotPtr" />
      <listitem open="0" type="815" id="153" label="getXFree" />
      <listitem open="0" type="815" id="154" label="getXFreePtr" />
      <listitem open="0" type="815" id="155" label="getXMemory" />
      <listitem open="0" type="815" id="156" label="getXMemoryPtr" />
      <listitem open="0" type="815" id="157" label="getXPtr" />
      <listitem open="0" type="815" id="158" label="initMemory" />
      <listitem open="0" type="815" id="160" label="saveBCToXML" />
      <listitem open="0" type="815" id="161" label="saveDSDataToXML" />
      <listitem open="0" type="815" id="162" label="saveDSIOToXML" />
      <listitem open="0" type="815" id="163" label="saveDSToXML" />
      <listitem open="0" type="815" id="164" label="setBoundaryConditionPtr" />
      <listitem open="0" type="815" id="166" label="setComputeJacobianXFunction" />
      <listitem open="0" type="815" id="169" label="setComputeTFunction" />
      <listitem open="0" type="815" id="172" label="setComputeUFunction" />
      <listitem open="0" type="815" id="175" label="setDSInputOutputs" />
      <listitem open="0" type="815" id="177" label="setDynamicalSystemXMLPtr" />
      <listitem open="0" type="815" id="179" label="setId" />
      <listitem open="0" type="815" id="181" label="setJacobianX" />
      <listitem open="0" type="815" id="183" label="setJacobianXPtr" />
      <listitem open="0" type="815" id="185" label="setN" />
      <listitem open="0" type="815" id="187" label="setNSDSPtr" />
      <listitem open="0" type="815" id="189" label="setNumber" />
      <listitem open="0" type="815" id="191" label="setParametersList" />
      <listitem open="0" type="815" id="194" label="setParametersListPtr" />
      <listitem open="0" type="815" id="197" label="setParametersListVector" />
      <listitem open="0" type="815" id="199" label="setR" />
      <listitem open="0" type="815" id="201" label="setRMemory" />
      <listitem open="0" type="815" id="203" label="setRMemoryPtr" />
      <listitem open="0" type="815" id="205" label="setRPtr" />
      <listitem open="0" type="815" id="207" label="setStepsInMemory" />
      <listitem open="0" type="815" id="209" label="setT" />
      <listitem open="0" type="815" id="211" label="setTPtr" />
      <listitem open="0" type="815" id="213" label="setTmpWorkVector" />
      <listitem open="0" type="815" id="216" label="setType" />
      <listitem open="0" type="815" id="218" label="setU" />
      <listitem open="0" type="815" id="220" label="setUPtr" />
      <listitem open="0" type="815" id="222" label="setUSize" />
      <listitem open="0" type="815" id="224" label="setVectorFieldFunction" />
      <listitem open="0" type="815" id="227" label="setX" />
      <listitem open="0" type="815" id="229" label="setX0" />
      <listitem open="0" type="815" id="231" label="setX0Ptr" />
      <listitem open="0" type="815" id="233" label="setXDot" />
      <listitem open="0" type="815" id="235" label="setXDotMemory" />
      <listitem open="0" type="815" id="237" label="setXDotMemoryPtr" />
      <listitem open="0" type="815" id="239" label="setXDotPtr" />
      <listitem open="0" type="815" id="241" label="setXFree" />
      <listitem open="0" type="815" id="243" label="setXFreePtr" />
      <listitem open="0" type="815" id="245" label="setXMemory" />
      <listitem open="0" type="815" id="247" label="setXMemoryPtr" />
      <listitem open="0" type="815" id="249" label="setXPtr" />
      <listitem open="0" type="815" id="251" label="swapInMemory" />
      <listitem open="0" type="815" id="252" label="void" />
      <listitem open="0" type="815" id="254" label="~DynamicalSystem" />
     </listitem>
     <listitem open="0" type="813" id="255" label="LagrangianDS" >
      <listitem open="0" type="814" id="256" label="NNL" />
      <listitem open="0" type="814" id="257" label="cShared" />
      <listitem open="0" type="814" id="258" label="fExt" />
      <listitem open="0" type="814" id="259" label="fInt" />
      <listitem open="0" type="814" id="260" label="isMassAllocatedIn" />
      <listitem open="0" type="814" id="261" label="isPAllocatedIn" />
      <listitem open="0" type="814" id="262" label="jacobianQFInt" />
      <listitem open="0" type="814" id="263" label="jacobianQNNL" />
      <listitem open="0" type="814" id="264" label="jacobianVelocityFInt" />
      <listitem open="0" type="814" id="265" label="jacobianVelocityNNL" />
      <listitem open="0" type="814" id="266" label="mass" />
      <listitem open="0" type="814" id="267" label="ndof" />
      <listitem open="0" type="814" id="268" label="p" />
      <listitem open="0" type="814" id="269" label="q" />
      <listitem open="0" type="814" id="270" label="q0" />
      <listitem open="0" type="814" id="271" label="qFree" />
      <listitem open="0" type="814" id="272" label="qMemory" />
      <listitem open="0" type="814" id="273" label="velocity" />
      <listitem open="0" type="814" id="274" label="velocity0" />
      <listitem open="0" type="814" id="275" label="velocityFree" />
      <listitem open="0" type="814" id="276" label="velocityMemory" />
      <listitem open="0" type="815" id="278" label="LagrangianDS" />
      <listitem open="0" type="815" id="277" label="LagrangianDS" />
      <listitem open="0" type="815" id="289" label="LagrangianDS" />
      <listitem open="0" type="815" id="283" label="LagrangianDS" />
      <listitem open="0" type="815" id="281" label="LagrangianDS" />
      <listitem open="0" type="815" id="295" label="computeFExt" />
      <listitem open="0" type="815" id="297" label="computeFInt" />
      <listitem open="0" type="815" id="299" label="computeFInt" />
      <listitem open="0" type="815" id="305" label="computeJacobianQFInt" />
      <listitem open="0" type="815" id="303" label="computeJacobianQFInt" />
      <listitem open="0" type="815" id="310" label="computeJacobianQNNL" />
      <listitem open="0" type="815" id="309" label="computeJacobianQNNL" />
      <listitem open="0" type="815" id="313" label="computeJacobianVelocityFInt" />
      <listitem open="0" type="815" id="315" label="computeJacobianVelocityFInt" />
      <listitem open="0" type="815" id="320" label="computeJacobianVelocityNNL" />
      <listitem open="0" type="815" id="319" label="computeJacobianVelocityNNL" />
      <listitem open="0" type="815" id="325" label="computeMass" />
      <listitem open="0" type="815" id="323" label="computeMass" />
      <listitem open="0" type="815" id="329" label="computeNNL" />
      <listitem open="0" type="815" id="328" label="computeNNL" />
      <listitem open="0" type="815" id="332" label="convert" />
      <listitem open="0" type="815" id="334" label="display" />
      <listitem open="0" type="815" id="335" label="dsConvergenceIndicator" />
      <listitem open="0" type="815" id="336" label="getFExt" />
      <listitem open="0" type="815" id="337" label="getFExtPtr" />
      <listitem open="0" type="815" id="338" label="getFInt" />
      <listitem open="0" type="815" id="339" label="getFIntPtr" />
      <listitem open="0" type="815" id="340" label="getIsLDSPlugin" />
      <listitem open="0" type="815" id="342" label="getJacobianQFInt" />
      <listitem open="0" type="815" id="343" label="getJacobianQFIntPtr" />
      <listitem open="0" type="815" id="344" label="getJacobianQNNL" />
      <listitem open="0" type="815" id="345" label="getJacobianQNNLPtr" />
      <listitem open="0" type="815" id="346" label="getJacobianVelocityFInt" />
      <listitem open="0" type="815" id="347" label="getJacobianVelocityFIntPtr" />
      <listitem open="0" type="815" id="348" label="getJacobianVelocityNNL" />
      <listitem open="0" type="815" id="349" label="getJacobianVelocityNNLPtr" />
      <listitem open="0" type="815" id="350" label="getMass" />
      <listitem open="0" type="815" id="351" label="getMassPtr" />
      <listitem open="0" type="815" id="352" label="getNNL" />
      <listitem open="0" type="815" id="353" label="getNNLPtr" />
      <listitem open="0" type="815" id="354" label="getNdof" />
      <listitem open="0" type="815" id="355" label="getP" />
      <listitem open="0" type="815" id="356" label="getPPtr" />
      <listitem open="0" type="815" id="357" label="getParametersList" />
      <listitem open="0" type="815" id="359" label="getParametersListPtr" />
      <listitem open="0" type="815" id="361" label="getQ" />
      <listitem open="0" type="815" id="362" label="getQ0" />
      <listitem open="0" type="815" id="363" label="getQ0Ptr" />
      <listitem open="0" type="815" id="364" label="getQFree" />
      <listitem open="0" type="815" id="365" label="getQFreePtr" />
      <listitem open="0" type="815" id="366" label="getQMemory" />
      <listitem open="0" type="815" id="367" label="getQMemoryPtr" />
      <listitem open="0" type="815" id="368" label="getQPtr" />
      <listitem open="0" type="815" id="369" label="getVelocity" />
      <listitem open="0" type="815" id="370" label="getVelocity0" />
      <listitem open="0" type="815" id="371" label="getVelocity0Ptr" />
      <listitem open="0" type="815" id="372" label="getVelocityFree" />
      <listitem open="0" type="815" id="373" label="getVelocityFreePtr" />
      <listitem open="0" type="815" id="374" label="getVelocityMemory" />
      <listitem open="0" type="815" id="375" label="getVelocityMemoryPtr" />
      <listitem open="0" type="815" id="376" label="getVelocityPtr" />
      <listitem open="0" type="815" id="377" label="initMemory" />
      <listitem open="0" type="815" id="379" label="saveDSToXML" />
      <listitem open="0" type="815" id="380" label="setComputeFExtFunction" />
      <listitem open="0" type="815" id="383" label="setComputeFIntFunction" />
      <listitem open="0" type="815" id="386" label="setComputeJacobianQFIntFunction" />
      <listitem open="0" type="815" id="389" label="setComputeJacobianQNNLFunction" />
      <listitem open="0" type="815" id="392" label="setComputeJacobianVelocityFIntFunction" />
      <listitem open="0" type="815" id="395" label="setComputeJacobianVelocityNNLFunction" />
      <listitem open="0" type="815" id="398" label="setComputeMassFunction" />
      <listitem open="0" type="815" id="401" label="setComputeNNLFunction" />
      <listitem open="0" type="815" id="404" label="setFExt" />
      <listitem open="0" type="815" id="406" label="setFExtPtr" />
      <listitem open="0" type="815" id="408" label="setFInt" />
      <listitem open="0" type="815" id="410" label="setFIntPtr" />
      <listitem open="0" type="815" id="412" label="setJacobianQFInt" />
      <listitem open="0" type="815" id="414" label="setJacobianQFIntPtr" />
      <listitem open="0" type="815" id="416" label="setJacobianQNNL" />
      <listitem open="0" type="815" id="418" label="setJacobianQNNLPtr" />
      <listitem open="0" type="815" id="420" label="setJacobianVelocityFInt" />
      <listitem open="0" type="815" id="422" label="setJacobianVelocityFIntPtr" />
      <listitem open="0" type="815" id="424" label="setJacobianVelocityNNL" />
      <listitem open="0" type="815" id="426" label="setJacobianVelocityNNLPtr" />
      <listitem open="0" type="815" id="428" label="setMass" />
      <listitem open="0" type="815" id="430" label="setMassPtr" />
      <listitem open="0" type="815" id="432" label="setNNL" />
      <listitem open="0" type="815" id="434" label="setNNLPtr" />
      <listitem open="0" type="815" id="436" label="setNdof" />
      <listitem open="0" type="815" id="438" label="setP" />
      <listitem open="0" type="815" id="440" label="setPPtr" />
      <listitem open="0" type="815" id="442" label="setParametersList" />
      <listitem open="0" type="815" id="445" label="setParametersListPtr" />
      <listitem open="0" type="815" id="448" label="setParametersListVector" />
      <listitem open="0" type="815" id="450" label="setQ" />
      <listitem open="0" type="815" id="452" label="setQ0" />
      <listitem open="0" type="815" id="454" label="setQ0Ptr" />
      <listitem open="0" type="815" id="456" label="setQFree" />
      <listitem open="0" type="815" id="458" label="setQFreePtr" />
      <listitem open="0" type="815" id="460" label="setQMemory" />
      <listitem open="0" type="815" id="462" label="setQMemoryPtr" />
      <listitem open="0" type="815" id="464" label="setQPtr" />
      <listitem open="0" type="815" id="466" label="setVelocity" />
      <listitem open="0" type="815" id="468" label="setVelocity0" />
      <listitem open="0" type="815" id="470" label="setVelocity0Ptr" />
      <listitem open="0" type="815" id="472" label="setVelocityFree" />
      <listitem open="0" type="815" id="474" label="setVelocityFreePtr" />
      <listitem open="0" type="815" id="476" label="setVelocityMemory" />
      <listitem open="0" type="815" id="478" label="setVelocityMemoryPtr" />
      <listitem open="0" type="815" id="480" label="setVelocityPtr" />
      <listitem open="0" type="815" id="482" label="swapInMemory" />
      <listitem open="0" type="815" id="483" label="void" />
      <listitem open="0" type="815" id="485" label="~LagrangianDS" />
     </listitem>
     <listitem open="0" type="813" id="486" label="LagrangianLinearTIDS" >
      <listitem open="0" type="814" id="487" label="C" />
      <listitem open="0" type="814" id="488" label="K" />
      <listitem open="0" type="814" id="489" label="isCAllocatedIn" />
      <listitem open="0" type="814" id="490" label="isKAllocatedIn" />
      <listitem open="0" type="815" id="492" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="497" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="491" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="517" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="511" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="503" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="495" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="525" label="convert" />
      <listitem open="0" type="815" id="527" label="display" />
      <listitem open="0" type="815" id="528" label="dsConvergenceIndicator" />
      <listitem open="0" type="815" id="529" label="getC" />
      <listitem open="0" type="815" id="530" label="getCPtr" />
      <listitem open="0" type="815" id="531" label="getK" />
      <listitem open="0" type="815" id="532" label="getKPtr" />
      <listitem open="0" type="815" id="533" label="saveDSToXML" />
      <listitem open="0" type="815" id="534" label="setC" />
      <listitem open="0" type="815" id="536" label="setCPtr" />
      <listitem open="0" type="815" id="538" label="setK" />
      <listitem open="0" type="815" id="540" label="setKPtr" />
      <listitem open="0" type="815" id="542" label="~LagrangianLinearTIDS" />
     </listitem>
     <listitem open="0" type="813" id="11" label="LinearDS" >
      <listitem open="0" type="814" id="12" label="A" />
      <listitem open="0" type="814" id="13" label="b" />
      <listitem open="0" type="814" id="14" label="cShared" />
      <listitem open="0" type="814" id="15" label="isAAllocatedIn" />
      <listitem open="0" type="814" id="16" label="isBAllocatedIn" />
      <listitem open="0" type="815" id="29" label="LinearDS" />
      <listitem open="0" type="815" id="23" label="LinearDS" />
      <listitem open="0" type="815" id="21" label="LinearDS" />
      <listitem open="0" type="815" id="18" label="LinearDS" />
      <listitem open="0" type="815" id="17" label="LinearDS" />
      <listitem open="0" type="815" id="33" label="computeA" />
      <listitem open="0" type="815" id="35" label="computeB" />
      <listitem open="0" type="815" id="37" label="convert" />
      <listitem open="0" type="815" id="39" label="display" />
      <listitem open="0" type="815" id="40" label="getA" />
      <listitem open="0" type="815" id="41" label="getAPtr" />
      <listitem open="0" type="815" id="42" label="getB" />
      <listitem open="0" type="815" id="43" label="getBPtr" />
      <listitem open="0" type="815" id="44" label="saveDSToXML" />
      <listitem open="0" type="815" id="45" label="setA" />
      <listitem open="0" type="815" id="47" label="setAPtr" />
      <listitem open="0" type="815" id="49" label="setB" />
      <listitem open="0" type="815" id="51" label="setBPtr" />
      <listitem open="0" type="815" id="53" label="setComputeAFunction" />
      <listitem open="0" type="815" id="56" label="setComputeBFunction" />
      <listitem open="0" type="815" id="59" label="void" />
      <listitem open="0" type="815" id="61" label="~LinearDS" />
     </listitem>
     <listitem open="0" type="813" id="548" label="LinearTIDS" >
      <listitem open="0" type="815" id="557" label="LinearTIDS" />
      <listitem open="0" type="815" id="555" label="LinearTIDS" />
      <listitem open="0" type="815" id="553" label="LinearTIDS" />
      <listitem open="0" type="815" id="549" label="LinearTIDS" />
      <listitem open="0" type="815" id="550" label="LinearTIDS" />
      <listitem open="0" type="815" id="562" label="computeVectorField" />
      <listitem open="0" type="815" id="564" label="convert" />
      <listitem open="0" type="815" id="566" label="display" />
      <listitem open="0" type="815" id="567" label="initialize" />
      <listitem open="0" type="815" id="570" label="setComputeAFunction" />
      <listitem open="0" type="815" id="573" label="setComputeBFunction" />
      <listitem open="0" type="815" id="576" label="setComputeJacobianXFunction" />
      <listitem open="0" type="815" id="579" label="~LinearTIDS" />
     </listitem>
     <listitem open="1" type="830" id="-1" label="Datatypes" >
      <listitem open="1" type="829" id="546" label=")" />
      <listitem open="1" type="829" id="4" label="bool" />
      <listitem open="1" type="829" id="3" label="char" />
      <listitem open="1" type="829" id="6" label="double" />
      <listitem open="1" type="829" id="5" label="float" />
      <listitem open="1" type="829" id="2" label="int" />
      <listitem open="1" type="829" id="7" label="long" />
      <listitem open="1" type="829" id="8" label="short" />
      <listitem open="1" type="829" id="9" label="string" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" id="-1" label="Use Case View" />
    <listitem open="1" type="821" id="-1" label="Component View" />
    <listitem open="1" type="827" id="-1" label="Deployment View" />
   </listitem>
  </listview>
  <codegeneration/>
 </XMI.content>
</XMI>
